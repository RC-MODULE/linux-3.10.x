/*
 * Device Tree Source for IBM Embedded PPC 476 Platform
 *
 * Copyright Â© 2011 Tony Breeds IBM Corporation
 *
 * This file is licensed under the terms of the GNU General Public
 * License version 2.  This program is licensed "as is" without
 * any warranty of any kind, whether express or implied.
 */

/dts-v1/;

/memreserve/ 0x01f00000 0x00100000;	// spin table

/ {
	#address-cells = <2>;
	#size-cells = <2>;
	model = "rc-module,mpw7705";
	compatible = "rc-module,mpw7705";
	dcr-parent = <&{/cpus/cpu@0}>;

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		mmc0 = &mmc0;
	};

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu@0 {
			device_type = "cpu";
			model = "PowerPC,470S";
			reg = <0>;
			clock-frequency = <500000000>; // 500 Mhz
			timebase-frequency = <100000000>; // 100Mhz
			i-cache-line-size = <32>;
			d-cache-line-size = <32>;
			i-cache-size = <32768>;
			d-cache-size = <32768>;
			dcr-controller;
			dcr-access-method = "native";
			status = "ok";
		};
		cpu@1 {
			device_type = "cpu";
			model = "PowerPC,470S";
			reg = <1>;
			clock-frequency = <50000000>; // 500 Mhz
			timebase-frequency = <100000000>; // 100Mhz
			i-cache-line-size = <32>;
			d-cache-line-size = <32>;
			i-cache-size = <32768>;
			d-cache-size = <32768>;
			dcr-controller;
			dcr-access-method = "native";
			status = "disabled";
			enable-method = "spin-table";
			cpu-release-addr = <0x0 0x01f00000>; 

		};
	};

	memory {
		device_type = "memory";	
		reg = <0x00000000 0x00000000 0x00000000 0x10000000   // 256MB at 0	
			   0x00000000 0x40000000 0x00000000 0x10000000   // 256MB at 0x40000000	
		>;  
	};
	

	lsif1clock: lsif1clock@100M {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <100000000>;
	};

	pclk: pclk {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <250000000>;
	};


	MPIC: interrupt-controller {
		compatible = "chrp,open-pic";
		interrupt-controller;
		dcr-reg = <0xffc00000 0x00040000>;
		#address-cells = <0>;
		#size-cells = <0>;
		#interrupt-cells = <2>;

	};

	plb {
		compatible = "ibm,plb6";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		clock-frequency = <250000000>; // 250Mhz

		lsif0 {
			compatible = "arm,amba-bus", "ibm,plb6";
			#address-cells = <1>;
			#size-cells = <1>;

			ranges = <0x00000000 0x010 0x00000000 0x80000000
				      0x80000000 0x010 0x80000000 0x80000000>;

			clock-frequency = <100000000>;

			mgpio0: mgpio0@0x3C040420 {
				compatible = "pinctrl-single";
				reg = <0x3C040420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;


				spi0_mux: spi0_mux_pinmux {
					pinctrl-single,bits = <0 0x7 0x7>;	/* register == afsel, value, mask */
				};

				uart0_mux: uart0_mux_pinmux {
					pinctrl-single,bits = <0 0x30 0x30>;	
				};

				uart1_mux: uart1_mux_pinmux {
					pinctrl-single,bits = <0 0xc0 0xc0>;	
				};


			};


			gpio0: gpio0@0x3C03B000 {
				#gpio-cells = <2>;
				compatible = "arm,pl061", "arm,primecell";
				gpio-controller;
				reg = <0x3C03B000 0x1000>;
				/* interrupt-controller;
				#interrupt-cells = <2>; */
				interrupt-parent = <&MPIC>;
				interrupts = <14 4>;	/* to check */
				clocks = <&pclk>;
				clock-names = "apb_pclk";
				
			};

			gpio1: gpio1@0x3C03C000 {
				#gpio-cells = <2>;
				compatible = "arm,pl061", "arm,primecell";
				gpio-controller;
				reg = <0x3C03C000 0x1000>;
				/* interrupt-controller;
				#interrupt-cells = <2>; */
				interrupt-parent = <&MPIC>;
				interrupts = <15 4>;	/* to check */
				clocks = <&pclk>;
				clock-names = "apb_pclk";				
			};

			spi0: spi0@0x3C03E000 {
				compatible = "arm,pl022", "arm,primecell";
				reg = <0x3C03E000 0x1000>;
				interrupts = <20 2>;	/* to check */
				#address-cells = <1>;
				#size-cells = <0>;
				interrupt-parent = <&MPIC>;
				clocks = <&pclk>;
				clock-names = "apb_pclk";
				pinctrl-names = "default";
				pinctrl-0 = <&spi0_mux>;
				num-cs = <1>;
				cs-gpios = <&gpio1 2 0>;


				spi_flash@0 {
					compatible = "st,m25p32", "spi-flash";
					reg = <0>;
					spi-max-frequency = <20000000>;
				};
				
			};


			uart0: uart0@3C034000 {
				compatible = "arm,pl011", "arm,primecell";
				reg = <0x3C034000 0x1000>;
				clocks = <&lsif1clock>, <&pclk>;
				clock-names = "uartclk", "apb_pclk";
				pinctrl-names = "default";
				pinctrl-0 = <&uart0_mux>;				
			};

			uart1: uart1@3C035000 {
				compatible = "arm,pl011", "arm,primecell";
				reg = <0x3C035000 0x1000>;
				clocks = <&lsif1clock>, <&pclk>;
				clock-names = "uartclk", "apb_pclk";
				pinctrl-names = "default";
				pinctrl-0 = <&uart1_mux>;
			};
			
		};

		lsif1 {
			compatible = "arm,amba-bus", "ibm,plb6";
			#address-cells = <1>;
			#size-cells = <1>;

			ranges = <0x00000000 0x010 0x00000000 0x80000000
				      0x80000000 0x010 0x80000000 0x80000000>;

			clock-frequency = <100000000>;



			mgpio0_1: mgpio0_1@0x3C060420 {
				compatible = "pinctrl-single";
				reg = <0x3C060420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth0_0mux: greth0_0mux_pinmux {
					pinctrl-single,bits = <0 0xff 0xff>;	/* register == afsel, value, mask */
				};
			};

			mgpio1_1: mgpio1_1@0x3C061420 {
				compatible = "pinctrl-single";
				reg = <0x3C061420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth0_1mux: greth0_1mux_pinmux {
					pinctrl-single,bits = <0 0xff 0xff>;	/* register == afsel, value, mask */
				};
			};

			mgpio2_1: mgpio2_1@0x3C062420 {
				compatible = "pinctrl-single";
				reg = <0x3C062420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth0_2mux: greth0_2mux_pinmux {
					pinctrl-single,bits = <0 0xff 0xff>;	/* register == afsel, value, mask */
				};
			};

			mgpio3_1: mgpio3_1@0x3C063420 {
				compatible = "pinctrl-single";
				reg = <0x3C063420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				spi1_mux: spi1_mux_pinmux {
					pinctrl-single,bits = <0 0x07 0x07>;	
				};

				greth1_0mux: greth1_0mux_pinmux {
					pinctrl-single,bits = <0 0xf8 0xf8>;	
				};
			};

			mgpio4_1: mgpio4_1@0x3C064420 {
				compatible = "pinctrl-single";
				reg = <0x3C064420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth1_1mux: greth1_1mux_pinmux {
					pinctrl-single,bits = <0 0xff 0xff>;
				};
			};

			mgpio5_1: mgpio5_1@0x3C065420 {
				compatible = "pinctrl-single";
				reg = <0x3C065420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth1_2mux: greth1_2mux_pinmux {
					pinctrl-single,bits = <0 0xff 0xff>;
				};
			};

			mgpio6_1: mgpio6_1@0x3C066420 {
				compatible = "pinctrl-single";
				reg = <0x3C066420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				greth1_3mux: greth1_3mux_pinmux {
					pinctrl-single,bits = <0 0x07 0x07>;
				};

				uart2_mux: uart2_mux_pinmux {
					pinctrl-single,bits = <0 0x18 0x18>;
				};
			};

			mgpio7_1: mgpio6_1@0x3C067420 {
				compatible = "pinctrl-single";
				reg = <0x3C067420 1>;
				pinctrl-single,register-width = <8>;
				pinctrl-single,function-mask = <0x1>;
				#address-cells = <1>;
				#size-cells = <0>;
				#pinctrl-cells = <2>;
				pinctrl-single,bit-per-mux;

				sdio_mux: sdio_mux_pinmux {
					pinctrl-single,bits = <0 0x1f 0x1f>;
				};
			};

			mmc0: mmc0@0x3C06A000 {
				compatible = "rc-module,mpw7705", "rc-module,mmc-0.2";
				reg = <0x3C06A000 0x1000>;
				interrupt-parent = <&MPIC>;
				interrupts = <35 2>;
				pinctrl-names = "default";
				pinctrl-0 = <&sdio_mux>;
			};


			spi1: spi1@0x3C05A000 {
				compatible = "arm,pl022", "arm,primecell";
				reg = <0x3C05A000 0x1000>;
				interrupts = <22 2>;	/* to check */
				#address-cells = <1>;
				#size-cells = <0>;
				interrupt-parent = <&MPIC>;
				clocks = <&pclk>;
				clock-names = "apb_pclk";
				pinctrl-names = "default";
				pinctrl-0 = <&spi1_mux>;
				num-cs = <1>;
				cs-gpios = <&gpio1 3 0>;

				sdcard0: sdcard@0 {
					compatible = "mmc-spi-slot";
					reg = <0>;			
					spi-max-frequency = <20000000>;
					voltage-ranges = <3200 3400>;
					mode = <0>;
					broken-cd;
					
					pl022,hierarchy = <0>;			/* SSP_MASTER */
					pl022,interface = <0>;			/* SSP_INTERFACE_MOTOROLA_SPI */
					pl022,com-mode = <0x1>;			/* POLLING_TRANSFER */
					pl022,rx-level-trig = <0>;		/* SSP_RX_1_OR_MORE_ELEM */
					pl022,tx-level-trig = <0>; 		/* SSP_TX_1_OR_MORE_EMPTY_LOC */
				};				
			};


		};		
		
	};

	chosen {
		linux,stdout-path = &uart0;
	};
};
